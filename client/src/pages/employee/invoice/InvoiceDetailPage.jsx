import React, { useEffect, useState, useRef } from "react";
import { useParams } from "react-router-dom";
import Layout from "../../../components/Layout";
import axios from "axios";
import { Button } from "antd";
import "../../../styles/InvoiceDetailPage.css"; // Th√™m file CSS ƒë·ªÉ x·ª≠ l√Ω in
import dayjs from "dayjs";

const InvoiceDetailPage = () => {
  const { id } = useParams();
  const [invoice, setInvoice] = useState(null);
  const [loading, setLoading] = useState(true);
  const printRef = useRef(); // Tham chi·∫øu ƒë·∫øn n·ªôi dung c·∫ßn in

  const getInvoiceDetail = async () => {
    try {
      const res = await axios.get(
        `http://localhost:8080/api/v1/employee/invoice/${id}`,
        {
          headers: {
            Authorization: `Bearer ${localStorage.getItem("token")}`,
          },
        }
      );

      if (res.data.invoice) {
        setInvoice(res.data.invoice);
      }
    } catch (error) {
      console.error("L·ªói l·∫•y chi ti·∫øt h√≥a ƒë∆°n:", error);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    getInvoiceDetail();
  }, [id]);

  // H√†m in ch·ªâ in n·ªôi dung trong printRef
  const handlePrint = () => {
    setTimeout(() => {
      window.print();
    }, 500); // Ch·ªù 0.5s ƒë·ªÉ CSS t·∫£i xong
  };

  if (loading) {
    return (
      <Layout>
        <p className="text-center">ƒêang t·∫£i...</p>
      </Layout>
    );
  }

  if (!invoice) {
    return (
      <Layout>
        <p className="text-center text-danger">Kh√¥ng t√¨m th·∫•y h√≥a ƒë∆°n!</p>
      </Layout>
    );
  }

  return (
    <Layout>
      <div className="container mt-4">
        <h2 className="text-center print-hide">Chi Ti·∫øt H√≥a ƒê∆°n</h2>

        {/* N·ªôi dung c·∫ßn in */}
        <div className="card p-3 print-content" ref={printRef}>
          <h3 className="text-center">üßæ H√ìA ƒê∆†N</h3>
          <p>
            <strong>M√£ H√≥a ƒê∆°n:</strong> {invoice._id}
          </p>
          <p>
            <strong>Kh√°ch H√†ng:</strong>{" "}
            {invoice.customer?.full_name || "Kh√°ch v√£ng lai"}
          </p>
          <p>
            <strong>Nh√¢n Vi√™n:</strong> {invoice.employee?.full_name || "N/A"}
          </p>
          <p>
            <strong>S√¢n ƒê√£ Thu√™:</strong>{" "}
            {invoice.court?.name || "Mua s·∫£n ph·∫©m"}
          </p>
          {invoice.court?.price &&
            invoice.checkInTime &&
            invoice.checkOutTime && (
              <>
                <p>
                  <strong>Th·ªùi Gian Check-in:</strong>{" "}
                  {new Date(invoice.checkInTime).toLocaleString()}
                </p>
                <p>
                  <strong>Th·ªùi Gian Check-out:</strong>{" "}
                  {new Date(invoice.checkOutTime).toLocaleString()}
                </p>
                <p>
                  <strong>T·ªïng s·ªë gi·ªù thu√™:</strong>{" "}
                  {(() => {
                    const checkInTime = dayjs(invoice.checkInTime).startOf(
                      "hour"
                    ); // L√†m tr√≤n xu·ªëng
                    const checkOutTime = dayjs(invoice.checkOutTime).endOf(
                      "hour"
                    ); // L√†m tr√≤n l√™n
                    const totalHours = checkOutTime.diff(checkInTime, "hour");
                    return Math.max(1, totalHours); // T·ªëi thi·ªÉu 1 gi·ªù
                  })()}{" "}
                  gi·ªù
                </p>

                <p>
                  <strong>ƒê∆°n Gi√° Thu√™ S√¢n:</strong>{" "}
                  {(() => {
                    const checkInTime = dayjs(invoice.checkInTime).startOf(
                      "hour"
                    ); // L√†m tr√≤n xu·ªëng
                    const checkOutTime = dayjs(invoice.checkOutTime).endOf(
                      "hour"
                    ); // L√†m tr√≤n l√™n

                    // T√≠nh t·ªïng s·ªë gi·ªù thu√™ (t·ªëi thi·ªÉu 1 gi·ªù)
                    const totalHours = Math.max(
                      1,
                      checkOutTime.diff(checkInTime, "hour")
                    );

                    // T√≠nh t·ªïng ti·ªÅn s·∫£n ph·∫©m ƒë√£ mua
                    const totalProductCost =
                      invoice.invoiceDetails?.reduce((sum, detail) => {
                        return (
                          sum +
                          (detail.quantity || 1) * (detail.product?.price || 0)
                        );
                      }, 0) || 0;

                    // T√≠nh ƒë∆°n gi√° thu√™ s√¢n (chia theo t·ªïng s·ªë gi·ªù)
                    const rentalPricePerHour =
                      totalHours > 0
                        ? (invoice.totalAmount - totalProductCost) / totalHours
                        : 0;

                    return rentalPricePerHour.toLocaleString();
                  })()}{" "}
                  ƒë/gi·ªù
                </p>
                <p>
                  <strong>T·ªïng Ti·ªÅn Thu√™ S√¢n:</strong>{" "}
                  {(() => {
                    // T√≠nh t·ªïng ti·ªÅn s·∫£n ph·∫©m ƒë√£ mua
                    const totalProductCost =
                      invoice.invoiceDetails?.reduce((sum, detail) => {
                        return (
                          sum +
                          (detail.quantity || 1) * (detail.product?.price || 0)
                        );
                      }, 0) || 0;

                    // T·ªïng ti·ªÅn thu√™ s√¢n = T·ªïng h√≥a ƒë∆°n - t·ªïng ti·ªÅn s·∫£n ph·∫©m
                    const totalRentalCost =
                      invoice.totalAmount - totalProductCost;

                    return totalRentalCost.toLocaleString();
                  })()}{" "}
                  ƒë
                </p>
              </>
            )}
          {invoice.checkInTime && invoice.checkOutTime && <></>}
          <p>
            <strong>Th·ªùi Gian L·∫≠p H√≥a ƒê∆°n:</strong>{" "}
            {new Date(invoice.createdAt).toLocaleString()}
          </p>

          {invoice.invoiceDetails && invoice.invoiceDetails.length > 0 ? (
            <>
              <h4>Chi Ti·∫øt Mua S·∫£n Ph·∫©m T·∫°i Ch·ªó</h4>
              <table className="table table-bordered">
                <thead className="table-dark">
                  <tr>
                    <th>STT</th>
                    <th>T√™n S·∫£n Ph·∫©m</th>
                    <th>Gi√°</th>
                    <th>S·ªë L∆∞·ª£ng</th>
                    <th>Th√†nh Ti·ªÅn</th>
                  </tr>
                </thead>
                <tbody>
                  {invoice.invoiceDetails.map((detail, index) => (
                    <tr key={index}>
                      <td>{index + 1}</td>
                      <td>{detail.product?.name || "N/A"}</td>
                      <td>{detail.product?.price?.toLocaleString()} ƒë</td>
                      <td>{detail.quantity || 1}</td>
                      <td>
                        {(
                          (detail.quantity || 1) * (detail.product?.price || 0)
                        ).toLocaleString()}{" "}
                        ƒë
                      </td>
                    </tr>
                  ))}
                </tbody>
                {/* D√≤ng t·ªïng ti·ªÅn s·∫£n ph·∫©m */}
                <tfoot>
                  <tr>
                    <td colSpan="8" className="text-end">
                      <strong>T·ªïng Ti·ªÅn Mua S·∫£n Ph·∫©m: </strong>
                      {invoice.invoiceDetails
                        .reduce((sum, detail) => {
                          return (
                            sum +
                            (detail.quantity || 1) *
                              (detail.product?.price || 0)
                          );
                        }, 0)
                        .toLocaleString()}{" "}
                      ƒë
                    </td>
                  </tr>
                </tfoot>
              </table>
            </>
          ) : (
            <span></span>
          )}
          <p>
            <strong>T·ªïng Ti·ªÅn:</strong> {invoice.totalAmount?.toLocaleString()}{" "}
            ƒë
          </p>
        </div>

        {/* N√∫t In H√≥a ƒê∆°n */}
        <div className="text-center mt-3 print-hide">
          <Button type="primary" onClick={handlePrint}>
            üñ® In H√≥a ƒê∆°n
          </Button>
        </div>
      </div>
    </Layout>
  );
};

export default InvoiceDetailPage;
